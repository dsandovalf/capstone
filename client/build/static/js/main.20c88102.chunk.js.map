{"version":3,"sources":["views/Register.js","api/clientBasicAuth.js","api/apiBasicAuth.js","views/Login.js","views/Logout.js","views/EditProfile.js","views/List.js","views/Movies.js","views/TopMovies.js","views/Popular.js","views/Search.js","components/ProtectedRoute.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["formSchema","Yup","shape","required","oneOf","initialValues","first","last","email","password","confirmPassword","Register","handleSubmit","axios","post","then","response","console","log","data","style","justifyContent","alignItems","display","Card","bg","text","width","Header","Body","validationSchema","onSubmit","values","htmlFor","className","name","type","Button","variant","Component","apiClient","create","baseURL","window","location","hostname","headers","Authorization","base64","encode","getToken","a","get","token","ok","error","status","FormSchema","Login","response_object","setState","props","setToken","redirect","state","styles","color","this","to","pathname","localStorage","getItem","errors","touched","Logout","EditProfile","List","Object","keys","collection","length","Table","striped","bordered","hover","map","key","alt","height","objectFit","src","poster_path","title","overview","vote_average","release_date","onClick","removeFromCollection","id","Movies","genre","movies","itemStart","itemEnd","search","TopMovies","fetch","res","json","results","Row","Col","md","resetForm","movie","addToCollection","Popular","Search","ProtectedRoute","children","NavBar","Navbar","expand","marginBottom","Container","fluid","Brand","as","Link","Toggle","Collapse","Nav","xmlns","fill","viewBox","d","NavDropdown","Item","Divider","App","setItem","push","JSON","stringify","alert","slice","exact","path","element","getDerivedStateFromProps","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c88102.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\n\r\nimport axios from 'axios';\r\n\r\nconst formSchema = Yup.object().shape({\r\n    \"first\": Yup.string().required(\"Required\"),\r\n    \"last\": Yup.string().required(\"Required\"),\r\n    \"email\": Yup.string().required(\"Required\"),\r\n    \"password\": Yup.string().required(\"Required\"),\r\n    \"confirmPassword\": Yup.string().required(\"Required\")\r\n     .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n\r\n})\r\n\r\nconst initialValues = {\r\n    first: '',\r\n    last: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword:'',\r\n\r\n\r\n}\r\n\r\nexport default class Register extends Component {\r\n\r\n    handleSubmit= ({first, last, email, password}) => {\r\n        axios.post(`http://127.0.0.1:5000/register_user?first_name=${first}&last_name=${last}&email=${email}&password=${password}`)\r\n        .then(response=>{console.log(response.data)})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                <Card bg=\"dark\" text=\"white\" style={{ width: '18rem', justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                    <Card.Header>Register</Card.Header>\r\n                    <Card.Body>\r\n                        <Formik initialValues={initialValues}\r\n                                validationSchema={formSchema}\r\n                                onSubmit={\r\n                                    (values)=>{\r\n                                    this.handleSubmit(values);\r\n                                    }\r\n                                }>\r\n                                    <Form>\r\n                                        <label htmlFor=\"first\" className=\"form-label\">First name</label>\r\n                                        <Field name=\"first\" className=\"form-control\"/>\r\n                                        <label htmlFor=\"last\" className=\"form-label\">Last Name</label>\r\n                                        <Field name=\"last\" className=\"form-control\"/>\r\n                                        <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                        <Field name=\"email\" className=\"form-control\"/>\r\n                                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                        <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                        <label htmlFor=\"password\" className=\"form-label\">Confirm</label>\r\n                                        <Field name=\"confirmPassword\" className=\"form-control\" type=\"password\"/>\r\n                                        <br/>\r\n                                        <Button variant = \"warning\" type=\"submit\">Login</Button>\r\n                                    </Form>\r\n                        </Formik>  \r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { create } from \"apisauce\";\r\nimport base64 from \"base-64\";\r\n\r\nconst apiClient = (email, password) => create(\r\n    {\r\n        baseURL: window.location.hostname === 'localhost' || window.location.hostname==='127.0.0.1' ? \"http://127.0.0.1:5000\" : '',\r\n        headers:{\r\n            Authorization: \"Basic \" +base64.encode(email+\":\"+password)\r\n        }\r\n    }\r\n);\r\n\r\nexport default apiClient\r\n","import apiClient from './clientBasicAuth';\r\n\r\nconst endpoint = \"/api/token\";\r\n\r\nconst getToken = async (email, password) => {\r\n    let response = await apiClient(email,password).get(endpoint);\r\n    let error, token = '';\r\n    if (!response.ok){error = \"Unexpected error please Try again!\"};\r\n    if (response.status === 401){error = \"Invalid Email/Password combo\"};\r\n    if (response.ok){token = response.data.token};\r\n    return {\"error\":error, token};\r\n};\r\n\r\nexport default getToken;","import React, { Component } from 'react';\r\nimport * as Yup from 'yup';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport getToken from '../api/apiBasicAuth';\r\nimport { Navigate } from 'react-router';\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    \"email\":Yup.string().email(\"Must be a valid e-mail format\").required('Required'),\r\n    \"password\": Yup.string().required('Required')\r\n})\r\n\r\nconst initialValues={\r\n    email:'',\r\n    password:''\r\n}\r\n\r\nexport default class Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            error:'',\r\n            redirect:false\r\n        };\r\n    };\r\n    \r\n    handleSubmit = async ({email, password})=>{\r\n        const response_object = await getToken(email,password);\r\n        this.setState({error:response_object.error})\r\n        this.props.setToken(response_object.token)\r\n        if (response_object.token){\r\n            this.setState({redirect:true})\r\n            console.log(response_object.token)\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n        const styles={\r\n            error:{color:'red'}\r\n        }\r\n        \r\n        return (\r\n            <div style={{justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                    {this.state.redirect ? <Navigate to={{pathname:\"/\", props:{token:localStorage.getItem('token')}}}/> :''}\r\n            <Card bg=\"dark\" text=\"white\" style={{ width: '18rem', justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                <Card.Header>Login</Card.Header>\r\n                <Card.Body>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={FormSchema}\r\n                        onSubmit={(values)=>{this.handleSubmit(values)}}\r\n                    >\r\n                        {\r\n                            ({errors, touched})=>(\r\n                                <Form>\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <Field name=\"email\" className=\"form-control\"/>\r\n                                    {errors.email && touched.email ? (<div style={styles.error}>{errors.email}</div>) : null}\r\n\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                    {errors.password && touched.password ? (<div style={styles.error}>{errors.password}</div>) : null}\r\n                                    <small style={styles.error}>{this.state.error}</small>\r\n                                    <br/>\r\n                                    <Button variant = \"warning\" type=\"submit\">Login</Button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n\r\n                    </Formik>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        )\r\n    };\r\n}","import React, { Component } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default class Logout extends Component {\r\n    \r\n    componentDidMount(){this.props.setToken('')}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigate to={{pathname : '/login'}}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {Button, Card} from 'react-bootstrap';\r\n\r\nexport default class EditProfile extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                <Card bg=\"dark\" text=\"white\" style={{ width: '18rem', justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n                    <Card.Header>Edit Profile</Card.Header>\r\n                    <Card.Body>\r\n                        <Formik>\r\n                            <Form>\r\n                                <label htmlFor=\"first\" className=\"form-label\">First name</label>\r\n                                <Field name=\"first\" className=\"form-control\"/>\r\n                                <br/>\r\n                                <label htmlFor=\"last\" className=\"form-label\">Last Name</label>\r\n                                <Field name=\"last\" className=\"form-control\"/>\r\n                                <br/>\r\n                                <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                <Field name=\"email\" className=\"form-control\"/>\r\n                                <br/>\r\n                                <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                <br/>\r\n                                <label htmlFor=\"password\" className=\"form-label\">Confirm</label>\r\n                                <Field name=\"password\" className=\"form-control\" type=\"password\"/>\r\n                                <br/>\r\n                                <Button variant = \"warning\" type=\"submit\">Login</Button>\r\n                            </Form>\r\n                        </Formik>  \r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Table, Button} from \"react-bootstrap\";\r\n    \r\n    \r\n\r\n    \r\n    export default function List(props) {\r\n        \r\n    return(\r\n        <div>\r\n            {Object.keys(props.collection).length>0 ? \r\n            (<>\r\n            <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Movie Poster</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Rating</th>\r\n                        <th>Release Date</th>\r\n                        <th>Remove</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Object.keys(props.collection).map(\r\n                            (key)=>(\r\n                                <tr key={props.collection[key].id}>\r\n                                    <td>\r\n                                        <img \r\n                                        alt = \"Movie Poster\"\r\n                                        style={{height:\"100px\", objectFit:\"contain\"}}\r\n                                        src={\"https://image.tmdb.org/t/p/original/\" + props.collection[key].poster_path ?? \"https://res.cloudinary.com/cae67/image/upload/v1629310111/fakebook_shop/no-image_nkau78.png\"}\r\n                                        />\r\n                                    </td>\r\n                                    <td>{props.collection[key].title ?? \"No title\"}</td>\r\n                                    <td>{props.collection[key].overview ?? \"No Description\"}</td>\r\n                                    <td>{props.collection[key].vote_average}</td>\r\n                                    <td>{props.collection[key].release_date}</td>\r\n                                    <td>\r\n                                        <Button \r\n                                            variant=\"warning\"\r\n                                            onClick={()=>props.removeFromCollection(props.collection[key])}\r\n                                            >\r\n                                                Remove Movie\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )\r\n                    }\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </Table>\r\n            </>):(\r\n                <h2>Your movie collection is empty</h2>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Movies extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            genre:[],\r\n            movies:[],\r\n            itemStart: 0,\r\n            itemEnd:5\r\n\r\n    }\r\n}\r\n    render() {\r\n        return (\r\n            <div style={{justifyContent: 'center', alignItems: 'center', display:'flex' }}>\r\n               <img src='MoviesRusH.png' height={\"380px\"} width={'400px'} alt=\"Movie Poster\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as Yup from 'yup';\r\nimport {Formik, Form} from 'formik';\r\nimport {Table, Col, Row} from 'react-bootstrap'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    \"search\": Yup.string(),\r\n\r\n})\r\n\r\nconst initialValues = {\r\n    search: ''\r\n}\r\n\r\nexport default class TopMovies extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movies:[]\r\n        }\r\n    }\r\n\r\n    handleSubmit=({search})=>{\r\n        fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=16c47942fb66dc368097a99fe70cad81&language=en-US&page=1`)\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    movies: data.results,\r\n                }, ()=>console.log(this.state.movies))\r\n            })\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={2}>\r\n                        <Formik initialValues={initialValues}\r\n                                validationSchema={formSchema}\r\n                                onSubmit={\r\n                                    (values, {resetForm})=>{\r\n                                        this.handleSubmit(values);\r\n                                        resetForm(initialValues);\r\n                                    }\r\n                                }\r\n                                >\r\n                                {\r\n                                    <Form>\r\n                                        <button type=\"submit\" className=\"btn btn-warning\">See Top Rated Movies</button>\r\n                                    </Form>\r\n                                }\r\n\r\n                        </Formik>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        {/* movie table starts here */}\r\n                        {this.state.movies?.length > 0  ?\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Movie Poster</th>\r\n                                        <th>Title</th>\r\n                                        <th>Description</th>\r\n                                        <th>Release Date</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Add to Collection</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.movies.map(\r\n                                        movie => (\r\n                                            <tr key={movie.id}>\r\n                                                <td><img src={ \"https://image.tmdb.org/t/p/original/\" + movie.poster_path} height=\"200\" alt=\"Movie Poster\"/></td>\r\n                                                <td>{movie.title}</td>\r\n                                                <td>{movie.overview}</td>\r\n                                                <td>{movie.release_date}</td>\r\n                                                <td>{movie.vote_average}</td>\r\n                                                <td>{<button type=\"submit\" className=\"btn btn-danger\" onClick={()=> this.props.addToCollection(movie)}>Add to Collection</button>}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    )\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        :''}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as Yup from 'yup';\r\nimport {Formik, Form} from 'formik';\r\nimport {Table, Col, Row} from 'react-bootstrap'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    \"search\": Yup.string(),\r\n\r\n})\r\n\r\nconst initialValues = {\r\n    search: ''\r\n}\r\n\r\nexport default class Popular extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movies:[]\r\n        }\r\n    }\r\n\r\n    handleSubmit=({search})=>{\r\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=16c47942fb66dc368097a99fe70cad81&language=en-US&page=1`)\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    movies: data.results,\r\n                }, ()=>console.log(this.state.movies))\r\n            })\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={2}>\r\n                        <Formik initialValues={initialValues}\r\n                                validationSchema={formSchema}\r\n                                onSubmit={\r\n                                    (values, {resetForm})=>{\r\n                                        this.handleSubmit(values);\r\n                                        resetForm(initialValues);\r\n                                    }\r\n                                }\r\n                                >\r\n                                {\r\n                                    <Form>\r\n                                        <button type=\"submit\" className=\"btn btn-warning\">See Trending Movies</button>\r\n                                    </Form>\r\n                                }\r\n\r\n                        </Formik>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        {/* movie table starts here */}\r\n                        {this.state.movies?.length > 0  ?\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Movie Poster</th>\r\n                                        <th>Title</th>\r\n                                        <th>Description</th>\r\n                                        <th>Release Date</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Add to Collection</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.movies.map(\r\n                                        movie => (\r\n                                            <tr key={movie.id}>\r\n                                                <td><img src={ \"https://image.tmdb.org/t/p/original/\" + movie.poster_path} height=\"200\" alt=\"Movie Poster\"/></td>\r\n                                                <td>{movie.title}</td>\r\n                                                <td>{movie.overview}</td>\r\n                                                <td>{movie.release_date}</td>\r\n                                                <td>{movie.vote_average}</td>\r\n                                                <td>{<button type=\"submit\" className=\"btn btn-danger\" onClick={()=> this.props.addToCollection(movie)}>Add to Collection</button>}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    )\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        :''}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as Yup from 'yup';\r\nimport {Formik, Field, Form} from 'formik';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {Col, Row} from 'react-bootstrap';\r\n\r\nconst formSchema = Yup.object().shape({\r\n    \"search\": Yup.string().required(\"Required\"),\r\n\r\n})\r\n\r\nconst initialValues = {\r\n    search: ''\r\n}\r\n\r\nexport default class Search extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movies:[],\r\n        }\r\n    }\r\n\r\n    handleSubmit=({search})=>{\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=16c47942fb66dc368097a99fe70cad81&language=en-US&query=${search}&page=1&include_adult=false`)\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    movies: data.results,\r\n                }, ()=>console.log(this.state.movies))\r\n            })\r\n    }    \r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <Row>\r\n                    <Col md={2}>\r\n                        <h3>Search </h3>\r\n                        <h3>for a </h3>\r\n                        <h3>Movie</h3>\r\n                        <Formik initialValues={initialValues}\r\n                                validationSchema={formSchema}\r\n                                onSubmit={\r\n                                    (values, {resetForm})=>{\r\n                                    this.handleSubmit(values);\r\n                                    resetForm(initialValues);\r\n                                    }\r\n                                }\r\n                                >\r\n                                {\r\n                                    ({errors, touched})=>(\r\n                                    <Form>\r\n                                        <label htmlFor=\"search\" className=\"form-label\"></label>\r\n                                        <Field name=\"search\" className=\"form-control\" />\r\n                                        {errors.search && touched.search ? (<div style={{color:'red'}}>{errors.search}</div>):null}\r\n                                        <br/>\r\n                                        <button type=\"submit\" className=\"btn btn-warning\">Search</button>\r\n                                    </Form>\r\n                                    )\r\n                                }\r\n\r\n                        </Formik>\r\n                    </Col>\r\n                    <br/>\r\n                    <Col md={9}>\r\n                        <Row>\r\n                            {this.state.movies?.length > 0  ?\r\n                                <Table striped bordered hover variant=\"dark\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Movie Poster</th>\r\n                                            <th>Title</th>\r\n                                            <th>Description</th>\r\n                                            <th>Release Date</th>\r\n                                            <th>Rating</th>\r\n                                            <th>Add to Collection</th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.movies.map(\r\n                                            movie => (\r\n                                                <tr key={movie.id}>\r\n                                                    <td><img src={ \"https://image.tmdb.org/t/p/original/\" + movie.poster_path} height=\"200\" alt=\"Movie Poster\"/></td>\r\n                                                    <td>{movie.title}</td>\r\n                                                    <td>{movie.overview}</td>\r\n                                                    <td>{movie.release_date}</td>\r\n                                                    <td>{movie.vote_average}</td>\r\n                                                    <td>{<button type=\"submit\" className=\"btn btn-danger\" onClick={()=> this.props.addToCollection(movie)}>Add to Collection</button>}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        )\r\n                                        \r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            :''}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nexport default class ProtectedRoute extends Component {\r\n    render() {\r\n        return this.props.token ?(\r\n            this.props.children\r\n        ):(\r\n            <Navigate to={{pathname:\"/login\"}}/>\r\n        )\r\n            \r\n        \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        const styles={\r\n            navbar:{\r\n                marginBottom:\"20px\"\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={styles.navbar}>\r\n                    <Container fluid>\r\n                        <Navbar.Brand as={Link} to=\"/\"><img src=\"MoviesRus.png\" height=\"50\" alt=\"Movie Poster\"/></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {this.props.token ?\r\n                        <>\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/top-rated\">Top Rated</Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/popular\">Trending Movies</Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/search\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"20\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                                </svg></Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/auth/login\">Movie</Nav.Link>\r\n\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Nav.Link as={Link} to=\"/my-collection\">My Movie Collection</Nav.Link>\r\n                                <NavDropdown title=\"My Profile\" id=\"collasible-nav-dropdown\">\r\n                                    <NavDropdown.Item as={Link} to=\"/edit-profile\">Edit Profile</NavDropdown.Item>\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item as={Link} to=\"/logout\">Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                        </>\r\n                        :\r\n                            <Nav>\r\n                                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\r\n                            </Nav>\r\n                        }\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport {Routes, Route} from 'react-router-dom'\nimport Register from './views/Register';\nimport Login from './views/Login';\nimport Logout from './views/Logout';\nimport EditProfile from './views/EditProfile'\nimport List from './views/List';\nimport Movies from './views/Movies';\nimport TopMovies from './views/TopMovies';\nimport Popular from './views/Popular';\nimport Search from './views/Search';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport NavBar from './components/NavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\n\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state={\n      token:'',\n      collection:[]\n    }\n  }\n\n  setToken = (token)=>{\n    this.setState({token})\n    localStorage.setItem('token',token)\n  }\n\n  static getDerivedStateFromProps = (props,state)=>{\n    return {\"token\":localStorage.getItem('token'),  \"collection\":JSON.parse(localStorage.getItem('collection')||\"[]\") }\n  }\n  \n  \n  addToCollection=(movie)=>{\n    let collection = this.state.collection\n    console.log(this.state.collection)\n    console.log(typeof this.state.collection)\n    collection.push(movie)\n    localStorage.setItem(\"collection\",JSON.stringify(collection))\n    this.setState({collection})\n    alert(`You added ${movie.title} to your collection`)\n  }\n\n  removeFromCollection = (movie)=>{\n    let collection=this.state.collection;\n    // forindex\n    collection.slice()\n    this.setState({collection})\n    localStorage.setItem(\"collection\",JSON.stringify(collection))\n    alert(`You remove ${movie.title} from your collection`)\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar token={this.state.token}/>\n        <Routes>\n\n          <Route exact path = '/' element={\n            <ProtectedRoute token={this.state.token}>\n              <Movies/>\n            </ProtectedRoute>\n          }/>\n\n          <Route exact path = '/top-rated' element={\n            <ProtectedRoute token={this.state.token} setToken={this.setToken} addToCollection={this.addToCollection}>\n              <TopMovies addToCollection={this.addToCollection}/>\n            </ProtectedRoute>\n          }/>\n          \n          <Route exact path = '/popular' element={\n            <ProtectedRoute token={this.state.token} setToken={this.setToken} addToCollection={this.addToCollection}>\n              <Popular addToCollection={this.addToCollection}/>\n            </ProtectedRoute>\n          }/>\n\n          \n          <Route exact path = '/search' element={\n            <ProtectedRoute token={this.state.token} setToken={this.setToken} >\n              <Search addToCollection={this.addToCollection}/>\n            </ProtectedRoute>\n          }/>\n          \n          <Route exact path = '/my-collection' element={\n            <ProtectedRoute token={this.state.token}>\n              <List\n                collection={this.state.collection} \n                removeFromCollection={this.removeFromCollection} \n              />\n            </ProtectedRoute>\n          }/>\n\n          <Route exact path = '/edit-profile' element={\n            <ProtectedRoute token={this.state.token}>\n              <EditProfile/>\n            </ProtectedRoute>\n          }/>\n\n          <Route exact path = '/logout' element={\n            <ProtectedRoute token={this.state.token}>\n              <Logout setToken={this.setToken}/>\n            </ProtectedRoute>\n          }/>\n          \n          <Route path = '/login' element={<Login setToken={this.setToken}/>}/>\n          <Route path = '/register' element={<Register/>}/>\n\n        </Routes>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}